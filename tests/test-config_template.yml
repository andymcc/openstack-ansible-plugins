---
# Copyright 2016, Comcast Corp.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Test config_template
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    # Test basic function of config_template
    - name: Template test INI template
      config_template:
        src: "{{ playbook_dir }}/templates/test.ini"
        dest: "/tmp/test.ini"
        config_overrides: "{{ test_config_ini_overrides }}"
        config_type: "ini"

    - name: Read test.ini
      slurp:
        src: /tmp/test.ini
      register: ini_file
    - debug:
        msg: "ini - {{ ini_file.content | b64decode }}"
    - name: Validate output
      assert:
        that:
          - "(lookup('ini', 'new_key section=DEFAULT file=/tmp/test.ini')) == 'new_value'"
          - "(lookup('ini', 'baz section=foo file=/tmp/test.ini')) == 'bar'"

    # Test basic function of config_template with content instead of src
    - name: Template test INI template
      config_template:
        content: "{{ lookup('file', playbook_dir + '/templates/test.ini') }}"
        dest: "/tmp/test_with_content.ini"
        config_overrides: "{{ test_config_ini_overrides }}"
        config_type: "ini"

    - name: Read test.ini
      slurp:
        src: /tmp/test_with_content.ini
      register: ini_file_with_content
    - debug:
        msg: "ini - {{ ini_file_with_content.content | b64decode }}"
    - name: Validate output
      assert:
        that:
          - "(lookup('ini', 'new_key section=DEFAULT file=/tmp/test_with_content.ini')) == 'new_value'"
          - "(lookup('ini', 'baz section=foo file=/tmp/test_with_content.ini')) == 'bar'"

    # Test list additions in config_template
    - name: Template test YML template
      config_template:
        src: "{{ playbook_dir }}/templates/test.yml"
        dest: "/tmp/test_extend.yml"
        config_overrides: "{{ test_config_yml_overrides }}"
        config_type: "yaml"
        list_extend: True

    - name: Read test_extend.yml
      slurp:
        src: /tmp/test_extend.yml
      register: extend_file
    - name: Read expected test_extend.yml
      slurp:
        src: "{{ playbook_dir }}/files/test_extend.yml.expected"
      register: extend_file_expected
    - debug:
        msg: "extend - {{ extend_file.content | b64decode }}"
    - debug:
        msg: "extend.expected - {{ extend_file_expected.content | b64decode }}"
    - name: Compare files
      assert:
        that:
          - "(extend_file.content | b64decode) == (extend_file_expected.content | b64decode)"

    # Test list replacement in config_template
    - name: Template test YML template
      config_template:
        src: "{{ playbook_dir }}/templates/test.yml"
        dest: "/tmp/test_no_extend.yml"
        config_overrides: "{{ test_config_yml_overrides }}"
        config_type: "yaml"
        list_extend: False
    - name: Read test_no_extend.yml
      slurp:
        src: /tmp/test_no_extend.yml
      register: no_extend_file
    - name: Read expected test_no_extend.yml
      slurp:
        src: "{{ playbook_dir }}/files/test_no_extend.yml.expected"
      register: no_extend_file_expected
    - debug:
        msg: "no_extend - {{ no_extend_file.content | b64decode }}"
    - debug:
        msg: "no_extend.expected - {{ no_extend_file_expected.content | b64decode }}"
    - name: Compare files
      assert:
        that:
          - "(no_extend_file.content | b64decode) == (no_extend_file_expected.content | b64decode)"

    # Test the ignore_none_type attribute when set to False
    - name: Template test with ignore_none_type set to false
      config_template:
        src: "{{ playbook_dir }}/templates/test_ignore_none_type.ini"
        dest: "/tmp/test_ignore_none_type.ini"
        config_overrides: "{{ test_config_ini_overrides }}"
        config_type: "ini"
        ignore_none_type: False
    - name: Read test_ignore_none_type.ini
      slurp:
        src: /tmp/test_ignore_none_type.ini
      register: test_ignore_none_type
    - debug:
        msg: "test_ignore_none_type.ini - {{ test_ignore_none_type.content | b64decode }}"
    - name: Validate output has valueless options printed out
      assert:
        that:
          - "{{ test_ignore_none_type.content | b64decode | search('(?m)^india$') }}"
          - "{{ test_ignore_none_type.content | b64decode | search('(?m)^juliett kilo$') }}"

    - name: Template multiple times to assert no changes
      config_template:
        src: "{{ playbook_dir }}/templates/test.ini"
        dest: "/tmp/test_with_content.ini"
        config_type: "ini"
        config_overrides: "{{ item[1] }}"
      register: template_changed
      failed_when: template_changed | changed
      with_nested:
        - [ 0, 1, 2 ]
        - [ "{{ test_config_ini_overrides }}" ]

  vars:
    test_config_ini_overrides:
      DEFAULT:
        new_key: "new_value"
      foo:
        baz: "bar"
      section1:
        key1: "value1"
        key2: "value2"
        key3: "value3"
        key4: "value4"
        key5: "value5"
        key6: "value6"
        key7: "value7"
        key8: "value8"
        key9: "value9"
        key10: "value10"
        key11: "value11"
      section2:
        key1: "value1"
      section3:
        key1: "value1"
      section4:
        key1: "value1"
      section5:
        key1: "value1"
      section6:
        key1: "value1"
      section7:
        key1: "value1"
      section8:
        key1: "value1"
      section9:
        key1: "value1"
      section10:
        key1: "value1"
      section11:
        key1: "value1"
    test_config_yml_overrides:
      list_one:
        - four
